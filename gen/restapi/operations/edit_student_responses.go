// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/ahab94/ApnaSchool/gen/models"
)

// EditStudentOKCode is the HTTP code returned for type EditStudentOK
const EditStudentOKCode int = 200

/*EditStudentOK student updated

swagger:response editStudentOK
*/
type EditStudentOK struct {

	/*
	  In: Body
	*/
	Payload *models.Student `json:"body,omitempty"`
}

// NewEditStudentOK creates EditStudentOK with default headers values
func NewEditStudentOK() *EditStudentOK {

	return &EditStudentOK{}
}

// WithPayload adds the payload to the edit student o k response
func (o *EditStudentOK) WithPayload(payload *models.Student) *EditStudentOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the edit student o k response
func (o *EditStudentOK) SetPayload(payload *models.Student) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *EditStudentOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// EditStudentInternalServerErrorCode is the HTTP code returned for type EditStudentInternalServerError
const EditStudentInternalServerErrorCode int = 500

/*EditStudentInternalServerError internal server error

swagger:response editStudentInternalServerError
*/
type EditStudentInternalServerError struct {
}

// NewEditStudentInternalServerError creates EditStudentInternalServerError with default headers values
func NewEditStudentInternalServerError() *EditStudentInternalServerError {

	return &EditStudentInternalServerError{}
}

// WriteResponse to the client
func (o *EditStudentInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
