// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/ahab94/ApnaSchool/gen/models"
)

// SignUpStudentCreatedCode is the HTTP code returned for type SignUpStudentCreated
const SignUpStudentCreatedCode int = 201

/*SignUpStudentCreated student added

swagger:response signUpStudentCreated
*/
type SignUpStudentCreated struct {

	/*
	  In: Body
	*/
	Payload *models.Student `json:"body,omitempty"`
}

// NewSignUpStudentCreated creates SignUpStudentCreated with default headers values
func NewSignUpStudentCreated() *SignUpStudentCreated {

	return &SignUpStudentCreated{}
}

// WithPayload adds the payload to the sign up student created response
func (o *SignUpStudentCreated) WithPayload(payload *models.Student) *SignUpStudentCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the sign up student created response
func (o *SignUpStudentCreated) SetPayload(payload *models.Student) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SignUpStudentCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SignUpStudentConflictCode is the HTTP code returned for type SignUpStudentConflict
const SignUpStudentConflictCode int = 409

/*SignUpStudentConflict student already exists

swagger:response signUpStudentConflict
*/
type SignUpStudentConflict struct {
}

// NewSignUpStudentConflict creates SignUpStudentConflict with default headers values
func NewSignUpStudentConflict() *SignUpStudentConflict {

	return &SignUpStudentConflict{}
}

// WriteResponse to the client
func (o *SignUpStudentConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(409)
}
