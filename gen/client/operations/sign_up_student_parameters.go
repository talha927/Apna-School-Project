// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/ahab94/ApnaSchool/gen/models"
)

// NewSignUpStudentParams creates a new SignUpStudentParams object
// with the default values initialized.
func NewSignUpStudentParams() *SignUpStudentParams {
	var ()
	return &SignUpStudentParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewSignUpStudentParamsWithTimeout creates a new SignUpStudentParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewSignUpStudentParamsWithTimeout(timeout time.Duration) *SignUpStudentParams {
	var ()
	return &SignUpStudentParams{

		timeout: timeout,
	}
}

// NewSignUpStudentParamsWithContext creates a new SignUpStudentParams object
// with the default values initialized, and the ability to set a context for a request
func NewSignUpStudentParamsWithContext(ctx context.Context) *SignUpStudentParams {
	var ()
	return &SignUpStudentParams{

		Context: ctx,
	}
}

// NewSignUpStudentParamsWithHTTPClient creates a new SignUpStudentParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewSignUpStudentParamsWithHTTPClient(client *http.Client) *SignUpStudentParams {
	var ()
	return &SignUpStudentParams{
		HTTPClient: client,
	}
}

/*SignUpStudentParams contains all the parameters to send to the API endpoint
for the sign up student operation typically these are written to a http.Request
*/
type SignUpStudentParams struct {

	/*Student
	  student's details

	*/
	Student *models.Student

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the sign up student params
func (o *SignUpStudentParams) WithTimeout(timeout time.Duration) *SignUpStudentParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the sign up student params
func (o *SignUpStudentParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the sign up student params
func (o *SignUpStudentParams) WithContext(ctx context.Context) *SignUpStudentParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the sign up student params
func (o *SignUpStudentParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the sign up student params
func (o *SignUpStudentParams) WithHTTPClient(client *http.Client) *SignUpStudentParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the sign up student params
func (o *SignUpStudentParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithStudent adds the student to the sign up student params
func (o *SignUpStudentParams) WithStudent(student *models.Student) *SignUpStudentParams {
	o.SetStudent(student)
	return o
}

// SetStudent adds the student to the sign up student params
func (o *SignUpStudentParams) SetStudent(student *models.Student) {
	o.Student = student
}

// WriteToRequest writes these params to a swagger request
func (o *SignUpStudentParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Student != nil {
		if err := r.SetBodyParam(o.Student); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
