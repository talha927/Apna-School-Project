// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/ahab94/ApnaSchool/gen/models"
)

// SignUpTeacherReader is a Reader for the SignUpTeacher structure.
type SignUpTeacherReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SignUpTeacherReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewSignUpTeacherCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 409:
		result := NewSignUpTeacherConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSignUpTeacherCreated creates a SignUpTeacherCreated with default headers values
func NewSignUpTeacherCreated() *SignUpTeacherCreated {
	return &SignUpTeacherCreated{}
}

/*SignUpTeacherCreated handles this case with default header values.

teacher added
*/
type SignUpTeacherCreated struct {
	Payload *models.Teacher
}

func (o *SignUpTeacherCreated) Error() string {
	return fmt.Sprintf("[POST /teacher/signup][%d] signUpTeacherCreated  %+v", 201, o.Payload)
}

func (o *SignUpTeacherCreated) GetPayload() *models.Teacher {
	return o.Payload
}

func (o *SignUpTeacherCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Teacher)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSignUpTeacherConflict creates a SignUpTeacherConflict with default headers values
func NewSignUpTeacherConflict() *SignUpTeacherConflict {
	return &SignUpTeacherConflict{}
}

/*SignUpTeacherConflict handles this case with default header values.

teacher already exists
*/
type SignUpTeacherConflict struct {
}

func (o *SignUpTeacherConflict) Error() string {
	return fmt.Sprintf("[POST /teacher/signup][%d] signUpTeacherConflict ", 409)
}

func (o *SignUpTeacherConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
