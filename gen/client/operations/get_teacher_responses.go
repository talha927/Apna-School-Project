// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/ahab94/ApnaSchool/gen/models"
)

// GetTeacherReader is a Reader for the GetTeacher structure.
type GetTeacherReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTeacherReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTeacherOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetTeacherNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetTeacherOK creates a GetTeacherOK with default headers values
func NewGetTeacherOK() *GetTeacherOK {
	return &GetTeacherOK{}
}

/*GetTeacherOK handles this case with default header values.

teacher response
*/
type GetTeacherOK struct {
	Payload *models.Teacher
}

func (o *GetTeacherOK) Error() string {
	return fmt.Sprintf("[GET /teacher/{ID}][%d] getTeacherOK  %+v", 200, o.Payload)
}

func (o *GetTeacherOK) GetPayload() *models.Teacher {
	return o.Payload
}

func (o *GetTeacherOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Teacher)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTeacherNotFound creates a GetTeacherNotFound with default headers values
func NewGetTeacherNotFound() *GetTeacherNotFound {
	return &GetTeacherNotFound{}
}

/*GetTeacherNotFound handles this case with default header values.

teacher not found
*/
type GetTeacherNotFound struct {
}

func (o *GetTeacherNotFound) Error() string {
	return fmt.Sprintf("[GET /teacher/{ID}][%d] getTeacherNotFound ", 404)
}

func (o *GetTeacherNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
