// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteStudentReader is a Reader for the DeleteStudent structure.
type DeleteStudentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteStudentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteStudentNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteStudentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteStudentNoContent creates a DeleteStudentNoContent with default headers values
func NewDeleteStudentNoContent() *DeleteStudentNoContent {
	return &DeleteStudentNoContent{}
}

/*DeleteStudentNoContent handles this case with default header values.

student deleted
*/
type DeleteStudentNoContent struct {
}

func (o *DeleteStudentNoContent) Error() string {
	return fmt.Sprintf("[DELETE /student/{ID}][%d] deleteStudentNoContent ", 204)
}

func (o *DeleteStudentNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteStudentNotFound creates a DeleteStudentNotFound with default headers values
func NewDeleteStudentNotFound() *DeleteStudentNotFound {
	return &DeleteStudentNotFound{}
}

/*DeleteStudentNotFound handles this case with default header values.

student not found
*/
type DeleteStudentNotFound struct {
}

func (o *DeleteStudentNotFound) Error() string {
	return fmt.Sprintf("[DELETE /student/{ID}][%d] deleteStudentNotFound ", 404)
}

func (o *DeleteStudentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
