// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/ahab94/ApnaSchool/gen/models"
)

// SignUpStudentReader is a Reader for the SignUpStudent structure.
type SignUpStudentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SignUpStudentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewSignUpStudentCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 409:
		result := NewSignUpStudentConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSignUpStudentCreated creates a SignUpStudentCreated with default headers values
func NewSignUpStudentCreated() *SignUpStudentCreated {
	return &SignUpStudentCreated{}
}

/*SignUpStudentCreated handles this case with default header values.

student added
*/
type SignUpStudentCreated struct {
	Payload *models.Student
}

func (o *SignUpStudentCreated) Error() string {
	return fmt.Sprintf("[POST /student/signup][%d] signUpStudentCreated  %+v", 201, o.Payload)
}

func (o *SignUpStudentCreated) GetPayload() *models.Student {
	return o.Payload
}

func (o *SignUpStudentCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Student)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSignUpStudentConflict creates a SignUpStudentConflict with default headers values
func NewSignUpStudentConflict() *SignUpStudentConflict {
	return &SignUpStudentConflict{}
}

/*SignUpStudentConflict handles this case with default header values.

student already exists
*/
type SignUpStudentConflict struct {
}

func (o *SignUpStudentConflict) Error() string {
	return fmt.Sprintf("[POST /student/signup][%d] signUpStudentConflict ", 409)
}

func (o *SignUpStudentConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
