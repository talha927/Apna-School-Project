// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/ahab94/ApnaSchool/gen/models"
)

// GetStudentReader is a Reader for the GetStudent structure.
type GetStudentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetStudentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetStudentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetStudentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetStudentOK creates a GetStudentOK with default headers values
func NewGetStudentOK() *GetStudentOK {
	return &GetStudentOK{}
}

/*GetStudentOK handles this case with default header values.

student response
*/
type GetStudentOK struct {
	Payload *models.Student
}

func (o *GetStudentOK) Error() string {
	return fmt.Sprintf("[GET /student/{ID}][%d] getStudentOK  %+v", 200, o.Payload)
}

func (o *GetStudentOK) GetPayload() *models.Student {
	return o.Payload
}

func (o *GetStudentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Student)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStudentNotFound creates a GetStudentNotFound with default headers values
func NewGetStudentNotFound() *GetStudentNotFound {
	return &GetStudentNotFound{}
}

/*GetStudentNotFound handles this case with default header values.

student not found
*/
type GetStudentNotFound struct {
}

func (o *GetStudentNotFound) Error() string {
	return fmt.Sprintf("[GET /student/{ID}][%d] getStudentNotFound ", 404)
}

func (o *GetStudentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
