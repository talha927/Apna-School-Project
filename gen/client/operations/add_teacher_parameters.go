// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/ahab94/ApnaSchool/gen/models"
)

// NewAddTeacherParams creates a new AddTeacherParams object
// with the default values initialized.
func NewAddTeacherParams() *AddTeacherParams {
	var ()
	return &AddTeacherParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewAddTeacherParamsWithTimeout creates a new AddTeacherParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewAddTeacherParamsWithTimeout(timeout time.Duration) *AddTeacherParams {
	var ()
	return &AddTeacherParams{

		timeout: timeout,
	}
}

// NewAddTeacherParamsWithContext creates a new AddTeacherParams object
// with the default values initialized, and the ability to set a context for a request
func NewAddTeacherParamsWithContext(ctx context.Context) *AddTeacherParams {
	var ()
	return &AddTeacherParams{

		Context: ctx,
	}
}

// NewAddTeacherParamsWithHTTPClient creates a new AddTeacherParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewAddTeacherParamsWithHTTPClient(client *http.Client) *AddTeacherParams {
	var ()
	return &AddTeacherParams{
		HTTPClient: client,
	}
}

/*AddTeacherParams contains all the parameters to send to the API endpoint
for the add teacher operation typically these are written to a http.Request
*/
type AddTeacherParams struct {

	/*Teacher
	  teacher's details

	*/
	Teacher *models.Teacher

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the add teacher params
func (o *AddTeacherParams) WithTimeout(timeout time.Duration) *AddTeacherParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the add teacher params
func (o *AddTeacherParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the add teacher params
func (o *AddTeacherParams) WithContext(ctx context.Context) *AddTeacherParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the add teacher params
func (o *AddTeacherParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the add teacher params
func (o *AddTeacherParams) WithHTTPClient(client *http.Client) *AddTeacherParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the add teacher params
func (o *AddTeacherParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithTeacher adds the teacher to the add teacher params
func (o *AddTeacherParams) WithTeacher(teacher *models.Teacher) *AddTeacherParams {
	o.SetTeacher(teacher)
	return o
}

// SetTeacher adds the teacher to the add teacher params
func (o *AddTeacherParams) SetTeacher(teacher *models.Teacher) {
	o.Teacher = teacher
}

// WriteToRequest writes these params to a swagger request
func (o *AddTeacherParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Teacher != nil {
		if err := r.SetBodyParam(o.Teacher); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
